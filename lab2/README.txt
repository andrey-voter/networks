Это инструкция по использованию скриптов для генерации и проверки топологии
Предполагается, что на хосте установлено и настроено окружение согласно инструкции на Гитхабе: https://github.com/BorisH2018/SHAD_2024/wiki а также установлены библиотеки 
subprocess, yaml, docker (pip3 install subprocess yaml docker ИЛИ sudo apt instal python3-docker python3-subprocess python3-yaml)

Для корректной работы скриптов необходимо положить их в одну директорию вместе с файлом daemons (все необходимые файлы приложены)

1) generate_topo2.py
Запуск: sudo python3 generate_topo2.py
Описание: Данный скрипт создает файл test1.yml и на его основе запускает clab, после чего производит настройку всех узлов (прописывает адреса, isis и т. д.)
В качестве примера он настроен на создание топологии, идентичной той, что была в лабораторной работе 1 (т. е. количество узлов и их связность совпадает)


2) test_topo.py
Запуск: sudo python3 test_topo.py
Описание: Предполагается, что скрипт запсукается после успешного запуска generate_topo2.py
Данный скрипт содержит набор функций для подключения к запущенным контейнерам, запуска на них ряда команд и вывода форматированного результата.
В конце файла представлены примеры работы со скриптом, в которых проверяется ip-связность всех PC (и не только)

Ответ на вопрос об ip-связности PC1 и PC2 после разрыва линка между router1 и touter2: ip-связность сохраняется в силу работы протокола isis, скриншоты с tracert
до и после отключения линка прилагаются

Если что-то не так, пожалуйста, пишите @andrey_tg1
